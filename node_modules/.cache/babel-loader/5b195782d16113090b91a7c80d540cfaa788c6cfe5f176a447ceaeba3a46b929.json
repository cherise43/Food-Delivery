{"ast":null,"code":"var _jsxFileName = \"/home/cathy/food-delivery-app/src/Components/AddMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [mealName, setMealName] = useState(\"\");\n  useEffect(() => {\n    fetchMeals();\n  }, []);\n  const fetchMeals = () => {\n    fetch(\"http://localhost:3000/meals\").then(response => response.json()).then(responseData => {\n      if (Array.isArray(responseData)) {\n        setMeals(responseData);\n      } else {\n        setMeals([]);\n      }\n    }).catch(error => console.error(\"Error fetching meals: \", error));\n  };\n  const handleMealNameChange = event => {\n    setMealName(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Create the new meal data object\n    const newMealData = {\n      strMeal: mealName\n    };\n\n    // Make the POST request to add the new meal\n    fetch(\"http://localhost:3000/meals\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newMealData)\n    }).then(response => response.json()).then(responseData => {\n      console.log(\"New meal added successfully:\", responseData);\n      // Clear the form field after successful submission\n      setMealName(\"\");\n      // Fetch meals again to update the list with the new meal\n      fetchMeals();\n    }).catch(error => console.error(\"Error adding new meal: \", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mealName\",\n          children: \"Meal Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mealName\",\n          value: mealName,\n          onChange: handleMealNameChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Meals:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meals.map(meal => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: meal.strMeal\n        }, meal.idMeal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMeals, \"kMYo1p16N1RI0UAngEfucYPdII8=\");\n_c = AddMeals;\nexport default AddMeals;\nvar _c;\n$RefreshReg$(_c, \"AddMeals\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddMeals","_s","meals","setMeals","mealName","setMealName","fetchMeals","fetch","then","response","json","responseData","Array","isArray","catch","error","console","handleMealNameChange","event","target","value","handleSubmit","preventDefault","newMealData","strMeal","method","headers","body","JSON","stringify","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","map","meal","idMeal","_c","$RefreshReg$"],"sources":["/home/cathy/food-delivery-app/src/Components/AddMeals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AddMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [mealName, setMealName] = useState(\"\");\n\n  useEffect(() => {\n    fetchMeals();\n  }, []);\n\n  const fetchMeals = () => {\n    fetch(\"http://localhost:3000/meals\")\n      .then((response) => response.json())\n      .then((responseData) => {\n        if (Array.isArray(responseData)) {\n          setMeals(responseData);\n        } else {\n          setMeals([]);\n        }\n      })\n      .catch((error) => console.error(\"Error fetching meals: \", error));\n  };\n\n  const handleMealNameChange = (event) => {\n    setMealName(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Create the new meal data object\n    const newMealData = {\n      strMeal: mealName,\n    };\n\n    // Make the POST request to add the new meal\n    fetch(\"http://localhost:3000/meals\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newMealData),\n    })\n      .then((response) => response.json())\n      .then((responseData) => {\n        console.log(\"New meal added successfully:\", responseData);\n        // Clear the form field after successful submission\n        setMealName(\"\");\n        // Fetch meals again to update the list with the new meal\n        fetchMeals();\n      })\n      .catch((error) => console.error(\"Error adding new meal: \", error));\n  };\n\n  return (\n    <div>\n      <h1>Add New Meal</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"mealName\">Meal Name:</label>\n          <input\n            type=\"text\"\n            id=\"mealName\"\n            value={mealName}\n            onChange={handleMealNameChange}\n            required\n          />\n        </div>\n        <button type=\"submit\">Add Meal</button>\n      </form>\n      <div>\n        <h2>Available Meals:</h2>\n        <ul>\n          {meals.map((meal) => (\n            <li key={meal.idMeal}>{meal.strMeal}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AddMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}